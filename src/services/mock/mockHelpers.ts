
import { AIReview } from "@/types/movie";

// Helper function for getting a mock review when API key is not configured
export function getMockReview(movieTitle: string | number): AIReview {
  const movieIdStr = typeof movieTitle === 'number' ? movieTitle.toString() : movieTitle;
  
  return {
    summary: `This is a mock review for "${movieIdStr}" as the OpenRouter API key is not configured. Please add VITE_OPENROUTER_API_KEY to your .env file to get real AI-generated reviews.`,
    pros: [
      "This is a mock pro point (API key not configured)",
      "To get real AI reviews, add your OpenRouter API key",
      "Create an account at openrouter.ai to get an API key",
      "Set VITE_OPENROUTER_API_KEY in your .env file"
    ],
    cons: [
      "This review is not generated by AI (missing API key)",
      "Content is generic and not specific to the movie",
      "You're missing out on customized AI insights"
    ],
    watchRecommendation: "To get a real recommendation, please configure your OpenRouter API key in your .env file.",
    ottPopularity: [
      {
        platform: "Mock Platform",
        trending: true,
        note: "This is mock OTT popularity data (API key not configured)"
      }
    ]
  };
}

// Helper function for fallback review when API call fails
export function getFallbackReview(movieTitle: string | number): AIReview {
  const movieIdStr = typeof movieTitle === 'number' ? movieTitle.toString() : movieTitle;
  
  return {
    summary: `We couldn't generate a complete AI review for "${movieIdStr}" at this time. This may be due to API limitations or connectivity issues.`,
    pros: [
      "The film has received attention from critics and audiences",
      "Movie information is available in our database",
      "You can still explore other reviews and information about this film",
      "Try refreshing to attempt generating a review again"
    ],
    cons: [
      "Limited information is available for a complete AI analysis",
      "Our AI review generation encountered technical difficulties",
      "You may want to check other sources for comprehensive reviews"
    ],
    watchRecommendation: "Consider checking critic and user reviews before watching this movie.",
    ottPopularity: []
  };
}
